{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","memo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","newTitle","setNewTitle","newUserId","setNewUserId","showTitleError","setTitleError","showUserError","setUserError","onSubmit","event","preventDefault","prev","array","newTodo","Math","max","el","TextField","sx","m","width","label","placeholder","helperText","error","value","onChange","target","InputProps","endAdornment","IconButton","onClick","visibility","FormControl","InputLabel","Select","labelId","MenuItem","disabled","FormHelperText","Button","type","size","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.922373c3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { memo } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = memo(({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n));\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = memo(({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n});\n","import React, { memo } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = memo(({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n));\n","import React, { useState } from 'react';\nimport './App.scss';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport {\n  TextField,\n  IconButton,\n  FormControl,\n  InputLabel,\n  Select,\n  SelectChangeEvent,\n  MenuItem,\n  FormHelperText,\n  Button,\n} from '@mui/material';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [newTitle, setNewTitle] = useState('');\n  const [newUserId, setNewUserId] = useState(0);\n  const [showTitleError, setTitleError] = useState(false);\n  const [showUserError, setUserError] = useState(false);\n\n  const getNewId = (array: { id: number }[]) => (\n    Math.max(...array.map(el => el.id)) + 1\n  );\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n\n    if (showTitleError) {\n      setTitleError(false);\n    }\n  };\n\n  const handleUserChange = (event: SelectChangeEvent<number>) => {\n    setNewUserId(+event.target.value);\n\n    if (showUserError) {\n      setUserError(false);\n    }\n  };\n\n  const reset = () => {\n    setNewTitle('');\n    setNewUserId(0);\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!newTitle) {\n      setTitleError(true);\n    }\n\n    if (!newUserId) {\n      setUserError(true);\n    }\n\n    if (newTitle && newUserId) {\n      setTodos(prev => {\n        const newTodo = {\n          id: getNewId(prev),\n          title: newTitle,\n          completed: false,\n          userId: newUserId,\n          user: getUserById(newUserId),\n        };\n\n        return [...prev, newTodo];\n      });\n\n      reset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <TextField\n            sx={{ m: 2, width: '250px' }}\n            data-cy=\"titleInput\"\n            label=\"Title\"\n            placeholder=\"Enter a title\"\n            helperText={showTitleError ? 'Please enter a title' : ''}\n            error={showTitleError}\n            value={newTitle}\n            onChange={handleTitleChange}\n            InputProps={{\n              endAdornment: (\n                <IconButton\n                  onClick={() => setNewTitle('')}\n                  sx={{ visibility: newTitle ? 'visible' : 'hidden' }}\n                >\n                  <ClearIcon />\n                </IconButton>\n              ),\n            }}\n          />\n        </div>\n\n        <div className=\"field\">\n          <FormControl error={showUserError} sx={{ m: 2, width: '250px' }}>\n            <InputLabel id=\"select-label\">User</InputLabel>\n            <Select\n              data-cy=\"userSelect\"\n              id=\"demo-simple-select\"\n              value={newUserId}\n              onChange={handleUserChange}\n              labelId=\"select-label\"\n              label=\"User\"\n            >\n              <MenuItem value=\"0\" disabled>Choose a user</MenuItem>\n              {usersFromServer.map(user => (\n                <MenuItem value={user.id} key={user.id}>{user.name}</MenuItem>\n              ))}\n            </Select>\n\n            {showUserError && (\n              <FormHelperText>Please choose a user</FormHelperText>\n            )}\n          </FormControl>\n        </div>\n\n        <Button\n          type=\"submit\"\n          size=\"large\"\n          data-cy=\"submitButton\"\n          variant=\"contained\"\n        >\n          Add\n        </Button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}